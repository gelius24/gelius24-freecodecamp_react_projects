{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geliu\\\\Desktop\\\\drum-machine\\\\src\\\\Touche.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Touche({\n  note\n}) {\n  _s();\n\n  const [active, setActive] = useState(false);\n\n  const playSound = () => {\n    if (on) {\n      const audioTag = document.getElementById(note.keyTrigger);\n      setActive(true);\n      setTimeout(() => setActive(false), 200);\n      audioTag.currentTime = 0;\n      audioTag.play();\n    } else {\n      alert(\"La machine est \");\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === note.keyCode) {\n      playSound();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: playSound,\n      id: \"note.keyTrigger\",\n      className: `${active && 'active'} drum-pad`,\n      children: [note.keyTrigger, /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: note.url,\n        className: \"clip\",\n        id: note.keyTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Touche, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n\n_c = Touche;\nexport default Touche;\n\nvar _c;\n\n$RefreshReg$(_c, \"Touche\");","map":{"version":3,"sources":["C:/Users/geliu/Desktop/drum-machine/src/Touche.js"],"names":["React","useEffect","useState","Touche","note","active","setActive","playSound","on","audioTag","document","getElementById","keyTrigger","setTimeout","currentTime","play","alert","handleKeyPress","e","keyCode","addEventListener","removeEventListener","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAwB;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMK,SAAS,GAAG,MAAM;AACtB,QAAIC,EAAJ,EAAQ;AACN,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwBP,IAAI,CAACQ,UAA7B,CAAjB;AACAN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,MAAAA,UAAU,CAAC,MAAMP,SAAS,CAAC,KAAD,CAAhB,EAAyB,GAAzB,CAAV;AACAG,MAAAA,QAAQ,CAACK,WAAT,GAAuB,CAAvB;AACAL,MAAAA,QAAQ,CAACM,IAAT;AACD,KAND,MAMO;AACLC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACD;AACF,GAVD;;AAYA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACC,OAAF,KAAcf,IAAI,CAACe,OAAvB,EAAgC;AAC9BZ,MAAAA,SAAS;AACV;AACF,GAJD;;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACU,gBAAT,CAA0B,SAA1B,EAAqCH,cAArC;AACA,WAAO,MAAM;AACXP,MAAAA,QAAQ,CAACW,mBAAT,CAA6B,SAA7B,EAAwCJ,cAAxC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAG,MAAA,OAAO,EAAEV,SAAZ;AAAwB,MAAA,EAAE,EAAC,iBAA3B;AAA6C,MAAA,SAAS,EAAG,GAAEF,MAAM,IAAI,QAAS,WAA9E;AAAA,iBACGD,IAAI,CAACQ,UADR,eAEE;AAAO,QAAA,GAAG,EAAER,IAAI,CAACkB,GAAjB;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,EAAE,EAAElB,IAAI,CAACQ;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GApCQT,M;;KAAAA,M;AAsCT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Touche({note}) {\r\n  const [active, setActive] = useState(false)\r\n\r\n  const playSound = () => {\r\n    if (on) {\r\n      const audioTag = document.getElementById(note.keyTrigger)\r\n      setActive(true);\r\n      setTimeout(() => setActive(false), 200);\r\n      audioTag.currentTime = 0;\r\n      audioTag.play();\r\n    } else {\r\n      alert(\"La machine est \")\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.keyCode === note.keyCode) {\r\n      playSound();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyPress);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={playSound}  id=\"note.keyTrigger\" className={`${active && 'active'} drum-pad`}>\r\n        {note.keyTrigger}\r\n        <audio src={note.url} className=\"clip\" id={note.keyTrigger}></audio>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Touche;\r\n"]},"metadata":{},"sourceType":"module"}