{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geliu\\\\Desktop\\\\drum-machine\\\\src\\\\Touche.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Touche({\n  note,\n  on,\n  id\n}) {\n  _s();\n\n  const [active, setActive] = useState(false);\n\n  const playSound = () => {\n    if (on) {\n      console.log(soundName);\n      const audioTag = document.getElementById(note.keyTrigger);\n      setActive(true);\n      setTimeout(() => setActive(false), 200);\n      audioTag.currentTime = 0;\n      audioTag.play();\n    } else {\n      alert(\"Allumer la machine !\");\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === note.keyCode) {\n      playSound();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: playSound,\n      id: id,\n      className: `${active && 'active'} drum-pad`,\n      children: [note.keyTrigger, /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: note.url,\n        className: \"clip\",\n        id: note.keyTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Touche, \"bmG2JTygrN+PZT3BxK5E30OQ5KE=\");\n\n_c = Touche;\nexport let soundName = '';\nexport default Touche;\n\nvar _c;\n\n$RefreshReg$(_c, \"Touche\");","map":{"version":3,"sources":["C:/Users/geliu/Desktop/drum-machine/src/Touche.js"],"names":["React","useEffect","useState","Touche","note","on","id","active","setActive","playSound","console","log","soundName","audioTag","document","getElementById","keyTrigger","setTimeout","currentTime","play","alert","handleKeyPress","e","keyCode","addEventListener","removeEventListener","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAhB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACtB,QAAIJ,EAAJ,EAAQ;AACNK,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACA,YAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwBX,IAAI,CAACY,UAA7B,CAAjB;AACAR,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAS,MAAAA,UAAU,CAAC,MAAMT,SAAS,CAAC,KAAD,CAAhB,EAAyB,GAAzB,CAAV;AACAK,MAAAA,QAAQ,CAACK,WAAT,GAAuB,CAAvB;AACAL,MAAAA,QAAQ,CAACM,IAAT;AACD,KAPD,MAOO;AACLC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,GAXD;;AAaA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,QAAIA,CAAC,CAACC,OAAF,KAAcnB,IAAI,CAACmB,OAAvB,EAAgC;AAC9Bd,MAAAA,SAAS;AACV;AACF,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACU,gBAAT,CAA0B,SAA1B,EAAqCH,cAArC;AACA,WAAO,MAAM;AACXP,MAAAA,QAAQ,CAACW,mBAAT,CAA6B,SAA7B,EAAwCJ,cAAxC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAG,MAAA,OAAO,EAAEZ,SAAZ;AAAwB,MAAA,EAAE,EAAEH,EAA5B;AAAgC,MAAA,SAAS,EAAG,GAAEC,MAAM,IAAI,QAAS,WAAjE;AAAA,iBACGH,IAAI,CAACY,UADR,eAEE;AAAO,QAAA,GAAG,EAAEZ,IAAI,CAACsB,GAAjB;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAuC,QAAA,EAAE,EAAEtB,IAAI,CAACY;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCQb,M;;KAAAA,M;AAsCT,OAAO,IAAIS,SAAS,GAAG,EAAhB;AACP,eAAeT,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Touche({note, on, id}) {\r\n  const [active, setActive] = useState(false)\r\n\r\n  const playSound = () => {\r\n    if (on) {\r\n      console.log(soundName)\r\n      const audioTag = document.getElementById(note.keyTrigger)\r\n      setActive(true);\r\n      setTimeout(() => setActive(false), 200);\r\n      audioTag.currentTime = 0;\r\n      audioTag.play();\r\n    } else {\r\n      alert(\"Allumer la machine !\")\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.keyCode === note.keyCode) {\r\n      playSound();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyPress);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyPress);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={playSound}  id={id} className={`${active && 'active'} drum-pad`}>\r\n        {note.keyTrigger}\r\n        <audio src={note.url} className=\"clip\" id={note.keyTrigger}></audio>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport let soundName = ''\r\nexport default Touche;\r\n"]},"metadata":{},"sourceType":"module"}